<?php

declare(strict_types=1);

namespace {{ VendorName }}\{{ ModuleName }}\Api;

use Magento\Framework\Api\SearchCriteriaInterface;
use {{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}Interface;
use {{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}SearchResultsInterface;

interface {{ ModelName }}RepositoryInterface
{
    /**
     * @param int $id
     * @return \{{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}Interface
     */
    public function get(int $id): \{{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}Interface;

    /**
      * @param \Magento\Framework\Api\SearchCriteriaInterface $criteria
      * @return \{{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}SearchResultsInterface
      */
    public function getList(SearchCriteriaInterface $criteria): \{{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}SearchResultsInterface;

    /**
     * @param \{{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}Interface $entity
     * @return \{{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}Interface
     */
    public function save({{ ModelName }}Interface $entity): \{{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}Interface;

    /**
      * @param \{{ VendorName }}\{{ ModuleName }}\Api\Data\{{ ModelName }}Interface $entity
      * @return bool
      */
    public function delete({{ ModelName }}Interface $entity): bool;

    /**
     * @param int $id
     * @return bool
     */
    public function deleteById(int $id): bool;
}
